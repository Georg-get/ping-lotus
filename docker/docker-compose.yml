version: '3.9'

services:
  django:
    container_name: django
    build: .
    command: sh -c "gunicorn --bind 0.0.0.0:8000 app.wsgi"
    volumes:
      - ./SITE-MG:/SITE-MG/
      - static_data:/SITE-MG/main/static
    expose:
      - 8000
    #environment:
      #- DATABASE_URL=postgresql://"имя пользователя":"пароль":5432/"имя бд" # настройки бд
      #- DEBUG=1

  nginx:
    container_name: nginx
    #restart: on-failure   #перезапуск контейнера после критического сбоя
    image: nginx:1.19.8-alpine
    depends_on: #запуск после Django
      - django
    ports:
      - "80:80"
    volumes:
      - static_data:/var/www/html/static
      - ./nginx-conf.d:/etc/nginx/conf.d

  #db:                           # Postgresql
    #container_name: Postgresql
    #restart: always #перезапуск контейнера после критического сбоя
    #image: postgres:13-alpine
    #volumes:
      #- pg_data:/var/lib/postgresql/data
    #expose:
      #- 5432
    #environment:
      #- POSTGRES_USER="имя пользователя"
      #- POSTGRES_PASSWORD="пароль"
      #- POSTGRES_DB="имя бд"

  #db:                           # Mysql
    #container_name: Mysql
    #restart: always  #перезапуск контейнера после критического сбоя
    #image: mysql:5.7:13-alpine
    #volumes:
      #- mysql_data:/var/lib/mysql_data/data
    #expose:
      #- 5432
    #environment:
       #MYSQL_DATABASE: 'db_django'
       #MYSQL_USER: 'root'
       #MYSQL_PASSWORD: 'password'
       #MYSQL_ROOT_PASSWORD: 'password'

volumes:
  #pg_data:     # Postgresql
  #mysql_data:  # Mysql
  static_data:  #